@model Paper
@using LaLlamaDelBosque.Utils;

@{
    ViewData["Title"] = "Crear Papelito";
    ViewData["CC"] = true;
    var sum = Model.Numbers.Sum(x => x.Amount) + Model.Numbers.Sum(x => x.Busted);
}

<h1 class="display-4">@ViewData["Title"]</h1>

<hr />

<form asp-action="Copy">
    <div class="form-group col-md-4">
        <div class="input-group mb-3">
            <input type="text" class="form-control col-md-2" placeholder="Papelito" name="id">
            <input type="submit" class="btn btn-success" value="Copiar">
        </div>
    </div>
</form>

<form asp-action="Save">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="row g-2">
        <div class="form-group col-md-2">
            <label asp-for="Id" class="control-label">Papelito</label>
            <input asp-for="Id" class="form-control" disabled readonly />
        </div>
        <div class="form-group col-md-2">
            <label asp-for="DrawDate" class="control-label">Fecha</label>
            <input asp-for="DrawDate" onchange="redirectToCreate('dateString', 'DrawDate')" type="date" min="@DateTime.Now.ToString("yyyy-MM-dd")" class="form-control" />
        </div>
        <div class="form-group col-md-4">
            <label asp-for="Lottery" class="control-label">Sorteo</label>
            <select asp-for="Lottery" class="form-control form-select" onchange="redirectToCreate('lottery', 'Lottery')">
                <option selected disabled>Seleccione un nombre</option>
                @if(ViewData["Names"] is not null)
                {
                    @foreach(var item in ViewData["Names"] as IList<Lottery> ?? new List<Lottery>())
                    {
                        <option value="@item.Name">@item.Name</option>
                    }
                }
            </select>
        </div>
        <div class="form-group col-md-4">
            <label asp-for="ClientId" class="control-label">Cliente</label>
            <select asp-for="ClientId" class="form-control form-select" onchange="redirectToCreate('clientId', 'ClientId')">
                <option value="-1" selected>Seleccione un nombre</option>
                @if(ViewData["Clients"] is not null)
                {
                    @foreach(var item in ViewData["Clients"] as IList<Client> ?? new List<Client>())
                    {
                        <option value="@item.Id">@item.Name</option>
                    }
                }
            </select>
        </div>
    </div>
    <div class="d-flex justify-content-end">
         @if (Model.Numbers.Any())
        {
            <input type="submit" value="Crear" class="btn btn-primary m-2" />
            <input type="button" onclick="location.href='@Url.Action("Clear", "Lottery")'" value="Limpiar" class="btn btn-danger m-2" />
        }
    </div>
</form>

@if(Model?.Lottery.Any() ?? false)
{
    <partial name="_Add" model="new Numbers()"/>
}

@if (Model?.Numbers.Any() ?? false)
{
    <div class="container-fluid mb-2">
        <div class="row">
            <div class="col-lg-8">
                <div class="table-responsive container overflow-auto">
                    <table class="table">
                        <thead>
                            <tr>
                                <th></th>
                                <th>Numero</th>
                                <th>Monto</th>
                                <th>Reventado</th>
                                <th></th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach(var item in Model.Numbers)
                            {
                                <tr>
                                    <td></td>
                                    <td>@item.Value</td>
                                    <td>@item.Amount</td>
                                    <td>@item.Busted</td>
                                    <td>
                                        <!-- Remove -->
                                        <button type="button" class="btn" onclick="showPartial('removePartial-@Model.Id-@item.Id')">
                                            <span class="material-icons icon icon-danger">delete</span>
                                        </button>
                                    </td>
                                </tr>
                                <tr id="removePartial-@Model.Id-@item.Id">
                                    <td colspan="6">
                                        <partial name="_Remove" model="new LotteryConnectionModel{PaperId= Model.Id, LineId= item.Id??1}" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

            </div>
            <div class="col-lg-4">
                <div class="card" style="background: linear-gradient(135deg, #3B82F6, #64b5f6);">
                    <div class="card-body">
                        <h2 class="card-title">Resumen</h2>
                        <p class="card-text">Monto Total: @Model.Numbers.Sum(x => x.Amount)</p>
                        <p class="card-text">Reventado Total: @Model.Numbers.Sum(x => x.Busted)</p>
                        <hr>
                        <p class="card-text" style="font-weight: bold; font-size: 1.2rem;">Total General: @sum</p>
                    </div>
                </div>

            </div>
        </div>
    </div>
}

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script type="text/javascript">
        var urlDeDestino;

        function redirectToCreate(paramName, inputId) {
            var input = document.getElementById(inputId);
            var value = input.value;
            var url = '@Url.Action("Create", "Lottery")?' + paramName + '=' + encodeURIComponent(value) + '&&cc=true';
            window.location.href = url;
        }

        function setFormat(id, key) {
            if (document.getElementById(id).value != "") {
                if (key !== 8) {
                    document.getElementById(id).addEventListener('input', function (e) {
                        e.target.value = e.target.value.replace(/[^\dA-Z]/g, '').replace(/(.{2})/g, '$1+').trim();
                    });
                }
                else {
                    newText = document.getElementById(id).value.substring(0, document.getElementById(id).value.length - 1);
                    document.getElementById(id).value = newText;
                }
            }
        }

        $(document).ready(function () {
            $('form').submit(function (e) {
                var amount = parseFloat($('#Amount').val());
                var busted = parseFloat($('#Busted').val());

                if (busted > amount) {
                    $('#Busted').siblings('.text-danger').text('El campo no puede ser mayor que el Monto.');
                    $('#Busted').focus();
                    e.preventDefault(); 
                }
                else {
                    $('#Busted').siblings('.text-danger').text('');
                }
            });
        });

        function showPartial(id) {
            var partialDivs = document.querySelectorAll('[id*="Partial"]');
            partialDivs.forEach(function (partialDiv) {
                if (partialDiv.id !== id) {
                    partialDiv.style.display = "none";
                }
            });

            var element = document.getElementById(id);

            if (element.style.display === "none") {
                if (element.tagName === "DIV") {
                    element.style.display = "block";
                } else if (element.tagName === "TR") {
                    element.style.display = "table-row";
                }            
            } else {
                element.style.display = "none";
            }
        }

    </script>
}

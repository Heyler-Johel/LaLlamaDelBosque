<link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">

@model AwardSetting

@{
    ViewData["Title"] = "Configuraciones";
}

<h1 class="display-4">@ViewData["Title"]</h1>

<div class="table-responsive container">
    <div class="row justify-content-md-center">
        <div class="col-lg-6">
            <h2>Tica</h2>
            <div class="btn-group mx-auto" role="group">
                <!-- Add -->
                <button type="button" class="btn btn-lg"
                        onclick="location.href='@Url.Action("Add", "Award")'">
                    <span class="material-icons icon icon-primary">add_circle</span>
                </button>
            </div>
            <table class="table">
                <thead>
                    <tr>
                        <th>Id</th>
                        <th>Nombre</th>
                        <th>Valor</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach(var item in Model.TicaSetting.Values)
                    {
                        <tr class="align-middle">
                            <td>
                                @item.Id
                            </td>
                            <td>
                                @item.Name
                            </td>
                            <td>
                                @item.Value
                            </td>
                            <td style="text-align:center">
                                <div class="btn-group mx-auto" role="group">
                                    <!-- Edit -->
                                    <button type="button" class="btn" onclick="location.href='@Url.Action("Edit", "Schedule", new {Id= item.Id})'">
                                        <span class="material-icons" style="color: var(--dark);">mode_edit</span>
                                    </button>
                                    <!-- Delete -->
                                    <button type="button" class="btn" onclick="location.href='@Url.Action("Delete", "Schedule", new {Id= item.Id})'">
                                        <span class="material-icons" style="color: var(--dark);">delete</span>
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
@*        @if(Model.TicaSetting.Values.Any() && TempData["Method"] is not null && Model.TicaSetting.Values.FirstOrDefault(x => x.Id == (int?)TempData["Id"]) is not null)
        {
            @switch(TempData["Method"])
            {
                case "Edit":
                    <div class="col-lg-4">
                        @Html.Partial("_Edit", Model.TicaSetting.Values.FirstOrDefault(x => x.Id == (int?)TempData["Id"]))
                    </div>
                    break;
                case "Delete":
                    <div class="col-lg-4">
                        @Html.Partial("_Delete", Model.TicaSetting.Values.FirstOrDefault(x => x.Id == (int?)TempData["Id"]))
                    </div>
                    break;
            }
        }*@
        <div class="col-lg-6">
            <h2>Nica</h2>
            <div class="btn-group mx-auto" role="group">
                <!-- Add -->
                <button type="button" class="btn btn-lg"
                        onclick="location.href='@Url.Action("Add", "Award")'">
                    <span class="material-icons icon icon-primary">add_circle</span>
                </button>
            </div>
            <table class="table">
                <thead>
                    <tr>
                        <th>Id</th>
                        <th>Nombre</th>
                        <th>Valor</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach(var item in Model.NicaSetting.Values)
                    {
                        <tr class="align-middle">
                            <td>
                                @item.Id
                            </td>
                            <td>
                                @item.Name
                            </td>
                            <td>
                                @item.Value
                            </td>
                            <td style="text-align:center">
                                <div class="btn-group mx-auto" role="group">
                                    <!-- Edit -->
                                    <button type="button" class="btn" onclick="location.href='@Url.Action("Edit", "Schedule", new {Id= item.Id})'">
                                        <span class="material-icons" style="color: var(--dark);">mode_edit</span>
                                    </button>
                                    <!-- Delete -->
                                    <button type="button" class="btn" onclick="location.href='@Url.Action("Delete", "Schedule", new {Id= item.Id})'">
                                        <span class="material-icons" style="color: var(--dark);">delete</span>
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        @*@if(Model.NicaSetting.Values.Any() && TempData["Method"] is not null && Model.NicaSetting.Values.FirstOrDefault(x => x.Id == (int?)TempData["Id"]) is not null)
        {
            @switch(TempData["Method"])
            {
                case "Edit":
                    <div class="col-lg-4">
                        @Html.Partial("_Edit", Model.NicaSetting.Values.FirstOrDefault(x => x.Id == (int?)TempData["Id"]))
                    </div>
                    break;
                case "Delete":
                    <div class="col-lg-4">
                        @Html.Partial("_Delete", Model.NicaSetting.Values.FirstOrDefault(x => x.Id == (int?)TempData["Id"]))
                    </div>
                    break;
            }
        }*@
    </div>
</div>



@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}